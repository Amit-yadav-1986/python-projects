Set of built in methods used to modify Strings in Python:

MODIFYING STRINGS:

1. upper() - use to convert all into uppercase 
eg: 
b = "Hello,World!"
print(b.upper())

output: HELLO,WORLD!

2. lower() - converts to lowercase
eg:
b = "Hello,World!"
print(b.lower())

output: hello,world!

3. strip() - removes any whitespace before or after actual Strings
eg:
b = " Hello, World! "
print(b.strip())

output: Hello, World!

4. replace() - replace one string with another
eg:
b = "Hello, World!"
print(b.replace("H", "J"))

output: Jello, World!

5. split() - splits a string into substrings if it finds instances of seperation.
eg:
b = "Hello, World!"
print(b.split(","))

output: ['Hello', ' World!']

STRING CANCATENATION:

String cancatenation can be done using "+" operator

eg: a = "Hello"
b = "World"
print(a + b)
output: HelloWorld

To add space between "Hello" and "World", simply add space using " "
eg:
a = "Hello"
b = "World"
print(a + " " +b)
output: Hello World

-- We can combine number to a string f-strings or the format() method.
eg:
age = 36
txt = f"My name is John, I am {age}"
print(txt)
output: My name is John, I am 36

Modifers can also be added to placeholders using ":" which will add 2 decimals to the number.
age = 36
txt = f"My name is John, I am {age:.2f}"
print(txt)
output: My name is John, I am 36.00

We can also perform mathematical opertation inside placeholders using f-strings.
a = 36
b = 48
txt = f"Multiplication of a and b gives result {a * b}"
print(txt)
output: Multiplication of a and b gives result 1728

STRING METHODS: 

capitalize() - Converts the first character to upper case
casefold() - Converts string into lower case
center() - Returns a centered string
count() - Returns the number of times a specified value occurs in a string
encode() - Returns an encoded version of the string
endswith() - Returns true if the string ends with the specified value
expandtabs() - Sets the tab size of the string
find() - Searches the string for a specified value and returns the position of where it was found
format() - Formats specified values in a string
format_map() - Formats specified values in a string
index() - Searches the string for a specified value and returns the position of where it was found
isalnum() - Returns True if all characters in the string are alphanumeric
isalpha() - Returns True if all characters in the string are in the alphabet
isascii() - Returns True if all characters in the string are ascii characters
isdecimal() - Returns True if all characters in the string are decimals
isdigit() - Returns True if all characters in the string are digits
isidentifier() - Returns True if the string is an identifier
islower() - Returns True if all characters in the string are lower case
isnumeric() - Returns True if all characters in the string are numeric
isprintable() - Returns True if all characters in the string are printable
isspace() - Returns True if all characters in the string are whitespaces
istitle() - Returns True if the string follows the rules of a title
isupper() - Returns True if all characters in the string are upper case
join() - Joins the elements of an iterable to the end of the string
ljust() - Returns a left justified version of the string
lower() - Converts a string into lower case
lstrip() - Returns a left trim version of the string
maketrans() - Returns a translation table to be used in translations
partition() - Returns a tuple where the string is parted into three parts
replace() - Returns a string where a specified value is replaced with a specified value
rfind() - Searches the string for a specified value and returns the last position of where it was found
rindex() - Searches the string for a specified value and returns the last position of where it was found
rjust() - Returns a right justified version of the string
rpartition() - Returns a tuple where the string is parted into three parts
rsplit() - Splits the string at the specified separator, and returns a list
rstrip() - Returns a right trim version of the string
split() - Splits the string at the specified separator, and returns a list
splitlines() - Splits the string at line breaks and returns a list
startswith() - Returns true if the string starts with the specified value
strip() - Returns a trimmed version of the string
swapcase() - waps cases, lower case becomes upper case and vice versa
title() - Converts the first character of each word to upper case
translate() - Returns a translated string
upper() - Converts a string into upper case
zfill() - Fills the string with a specified number of 0 values at the beginning